class Solution
{
    //Function to convert binary tree to doubly linked list and return it.
    Node bToDLL(Node root)
    {
        Node[] arr=dfs(root);
        return arr[0];
    }
    Node[] dfs(Node root){
        if(root.left==null && root.right==null){
            return new Node[]{root,root};
        }
        
        if(root.left==null){
            Node[] righty=dfs(root.right);
            root.right=righty[0];
            righty[0].left=root;
            return new Node[]{root,righty[1]};
        }
        
        Node[] lefty=dfs(root.left);
        lefty[1].right=root;
        root.left=lefty[1];
        
        if(root.right==null){
            return new Node[]{lefty[0],root};
        }
        Node[] righty=dfs(root.right);
        root.right=righty[0];
        righty[0].left=root;
        
        return new Node[]{lefty[0],righty[1]};
    }
}
